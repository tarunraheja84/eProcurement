// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Procurement {
  procurementId String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String      @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  // author    User      @relation(fields: [authorId], references: [id])
  // authorId  String    @db.ObjectId
  // comments  Comment[]
  quotations    Quotation[]
}

model User {
  userId      String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  email       String   @unique
  role        UserRole @default(USER)
  phoneNumber String?  @unique
  vendor      Vendor?  @relation(fields: [vendorId], references: [vendorId])
  vendorId    String?  @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum UserType {
  INTERNAL
  VENDOR
}

model Vendor {
  vendorId          String       @id @default(auto()) @map("_id") @db.ObjectId
  businessName      String       @unique
  businessBrandName String?
  gstin             String?
  pan               String       @unique
  addressLine       String
  pinCode           String
  city              String
  state             String
  countryCode       String
  phoneNumber       String       @unique
  status            VendorStatus @default(INACTIVE)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  createdBy         String
  updatedBy         String
  users             User[]
  quotations        Quotation[]
}

enum VendorStatus {
  ACTIVE
  INACTIVE
}

enum UserRole {
  USER
  ADMIN
  MANAGER
}

model Quotation {
  quotationId   String          @id @default(auto()) @map("_id") @db.ObjectId
  quotationName String
  status        QuotationStatus @default(PENDING)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  createdBy     String
  updatedBy     String
  procurement   Procurement     @relation(fields: [procurementId], references: [procurementId])
  procurementId String          @db.ObjectId
  vendor        Vendor          @relation(fields: [vendorId], references: [vendorId])
  vendorId      String          @db.ObjectId
}

enum QuotationStatus {
  PENDING
  ACCEPTED
  REJECTED
  EXPIRED
}
